# ===================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS POSTGRESQL
# ===================================================================

spring.application.name=backend

# URL de conexão JDBC.
# "localhost:5432" funciona porque você expôs a porta no docker-compose.
# "minha_base" é o nome do banco de dados (POSTGRES_DB).
spring.datasource.url=jdbc:postgresql://localhost:5432/interceptor

# Usuário do banco de dados (POSTGRES_USER).
spring.datasource.username=jpcalsavara

# Senha do banco de dados (POSTGRES_PASSWORD).
spring.datasource.password=senha

# Driver do PostgreSQL. O Spring Boot geralmente detecta isso, mas é uma boa prática definir.
spring.datasource.driver-class-name=org.postgresql.Driver


# ===================================================================
# CONFIGURAÇÃO DO JPA/HIBERNATE (Opcional, mas muito comum)
# ===================================================================

# Estratégia de geração do schema.
# "update": atualiza o schema do banco com base nas suas entidades.
# "create": apaga e cria tudo a cada reinicialização. Use com cuidado.
# "validate": valida se o schema corresponde às entidades.
# "none": não faz nada.
spring.jpa.hibernate.ddl-auto=update

# Mostra no console as queries SQL que o Hibernate está executando. Ótimo para debug.
spring.jpa.show-sql=true

# Formata o SQL exibido no console para ser mais legível.
spring.jpa.properties.hibernate.format_sql=true

# Dialeto específico do PostgreSQL para o Hibernate otimizar as queries.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect